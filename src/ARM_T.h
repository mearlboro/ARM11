
////////////////////////////////////////////////////////////////////////////////
////  1. ARM TYPE DEFINITION  //////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////  1.1 CONSTANTS  ///////////////////////////////////////////////////////////

#define MEMORY_CAPACITY 65536
#define REGISTER_COUNT  17

////  1.2 PIPELINE  ////////////////////////////////////////////////////////////

typedef struct Pipeline
{
	int32_t fetched;
	int32_t decoded;
} Pipeline;

////  1.2 ARM OBJECT  //////////////////////////////////////////////////////////

typedef struct ARMState
{
	int8_t memory[MEMORY_CAPACITY];
	int32_t registers[REGISTER_COUNT];
	Pipeline *pipeline;
} ARMState;

////  1.3 REGISTER DEFINITIONS  ////////////////////////////////////////////////

typedef enum
{
	R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12,
	SP, LR,
	PC,
	CPSR
} Register;

////  1.4 FLAG DEFINITIONS  ////////////////////////////////////////////////////

typedef enum
{
	NEGATIVE = 31,
	ZERO 	 = 30,
	CARRY 	 = 29,
	OVERFLOW = 28
} CPSRFlag;
